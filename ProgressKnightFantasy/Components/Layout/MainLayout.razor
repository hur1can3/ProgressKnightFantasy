@inherits LayoutComponentBase
@inject ThemeService ThemeManager
@using ProgressKnightFantasy.Components.Pages
@implements IDisposable

<MudThemeProvider @ref="_themeProvider" Theme="ThemeManager.CurrentTheme" />
@* Required *@
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Echoes of Arda</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@ToggleTheme" />
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="1" ClipMode="DrawerClipMode.Always" Variant="DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Chronicles</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>

    <MudMainContent Class="pt-16 px-2 pb-2">
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-2">
            <MudTabs Elevation="1" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-1">
                <MudTabPanel Text="Quests & Training" Icon="@Icons.Material.Filled.MenuBook"><StoryTab /></MudTabPanel>
                <MudTabPanel Text="Professions" Icon="@Icons.Material.Filled.Work"><WorkTab /></MudTabPanel>
                <MudTabPanel Text="Talents" Icon="@Icons.Material.Filled.Star"><SkillsTab /></MudTabPanel>
                <MudTabPanel Text="Market" Icon="@Icons.Material.Filled.Storefront"><ShopTab /></MudTabPanel>
                <MudTabPanel Text="Battlegrounds" Icon="@Icons.Material.Filled.SportsKabaddi"><CombatTab /></MudTabPanel>
                <MudTabPanel Text="Rebirth" Icon="@Icons.Material.Filled.Autorenew"><RebirthTab /></MudTabPanel>
                <MudTabPanel Text="Trials" Icon="@Icons.Material.Filled.VerifiedUser"><ChallengeTab /></MudTabPanel>
                <MudTabPanel Text="Lore & Automation" Icon="@Icons.Material.Filled.AutoStories"><AutomationTab /></MudTabPanel>
                <MudTabPanel Text="Chronicle" Icon="@Icons.Material.Filled.Save"><SaveTab /></MudTabPanel>
                <MudTabPanel Text="Settings" Icon="@Icons.Material.Filled.Settings"><SettingsTab /></MudTabPanel>
                <MudTabPanel Text="Offline Echoes" Icon="@Icons.Material.Filled.HourglassEmpty"><OfflineTab /></MudTabPanel>
                <MudTabPanel Text="Legends" Icon="@Icons.Material.Filled.EmojiEvents"><StatisticsTab /></MudTabPanel>
                <MudTabPanel Text="Guidance" Icon="@Icons.Material.Filled.HelpOutline"><HelpTab /></MudTabPanel>
            </MudTabs>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private MudThemeProvider _themeProvider = default!;

    protected override void OnInitialized()
    {
        ThemeManager.OnThemeChanged += ApplyTheme;
    }

    void DrawerToggle() => _drawerOpen = !_drawerOpen;

    private void ToggleTheme()
    {
        // This is a simple toggle between default_dark and default_light for demonstration
        // The profession-based theme switching is handled in GameStateService -> ThemeService
        var newThemeKey = ThemeManager.CurrentTheme == ThemeManager.AvailableThemes["default_dark"]
            ? "default_light"
            : "default_dark";
        ThemeManager.SetTheme(newThemeKey);
        // If GameStateService needs to know about this manual toggle:
        // GameState.CurrentGameData.CurrentThemeKey = newThemeKey;
        // GameState.NotifyStateChanged(); // To persist if needed
    }

    private async void ApplyTheme()
    {
        await InvokeAsync(() =>
        {
            _themeProvider.Theme = ThemeManager.CurrentTheme;
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        ThemeManager.OnThemeChanged -= ApplyTheme;
    }
}
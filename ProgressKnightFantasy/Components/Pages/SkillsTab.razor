@page "/talents"
@inherits GameTabPageBase
@using ProgressKnightFantasy.Game.Models
<MudPaper Class="pa-2" Elevation="0">
    <MudText Typo="Typo.h4" GutterBottom="true">Talents & Abilities</MudText>
    <MudText Typo="Typo.subtitle1" Class="mb-3">Hone your innate talents and learned abilities. These are permanent and persist through Rebirth. Current Adventurer XP: <MudChip T="string" Label="true" Color="Color.Info" Size="Size.Small">@GameState.CurrentGameData.CurrentRun.PlayerXp.ToString("N0")</MudChip></MudText>
    <MudGrid Spacing="2">
        @foreach (var skill in GameState.AllSkills.OrderBy(s => !GameState.CurrentGameData.UnlockedSkillIds.Contains(s.Id)).ThenBy(s => s.Category).ThenBy(s => s.Name))
        {
            bool isUnlocked = GameState.CurrentGameData.UnlockedSkillIds.Contains(skill.Id);
            int currentLevel = (int)GameState.GetSkillLevel(skill.Id);
            double costForNextLevel = (skill.XpCostForNextLevelFormula != null && currentLevel < skill.MaxLevel) ? skill.XpCostForNextLevelFormula(currentLevel) : 0;
            bool canLevelUp = GameState.CanLevelUpTalent(skill.Id);
            string unlockedOpacity = isUnlocked ? "" : "opacity: 0.65;";
            string classStyle = $"border-left: 4px solid {skill.ThemeColor}; {unlockedOpacity}";

            <MudItem xs="12" sm="6" md="4">
                <MudCard Elevation="isUnlocked ? 1 : 0" Style="classStyle" Class="mb-2">
                    <MudCardHeader Class="pa-2">
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@skill.Name</MudText>
                            <MudText Typo="Typo.caption">Category: @skill.Category</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            @if (isUnlocked && !string.IsNullOrEmpty(skill.DetailedEffectTooltip))
                            {
                                <MudTooltip Text="@skill.DetailedEffectTooltip" MaxWidth="MaxWidth.Small" Arrow="true"><MudIcon Icon="@Icons.Material.Outlined.Info" Color="Color.Default" Size="Size.Small" /></MudTooltip>
                            }
                        </CardHeaderActions>

                    </MudCardHeader>
                    <MudCardContent Class="pa-2">
                        <MudText Typo="Typo.body2" Class="mb-1">@skill.Description</MudText>
                        @if (isUnlocked)
                        {
                            <MudText Typo="Typo.h5" Class="mt-1">Level: @currentLevel / @skill.MaxLevel</MudText>
                            <MudText Typo="Typo.caption"><i>Effect: @skill.EffectDescription</i></MudText>
                            @if (currentLevel < skill.MaxLevel)
                            {
                                <MudText Typo="Typo.caption" Class="mt-1">Next Level Cost: <MudChip T="string" Label="true" Size="Size.Small" Color="Color.Warning">@costForNextLevel.ToString("N0") XP</MudChip></MudText>
                            }
                        }
                        else
                        {
                            <MudText Typo="Typo.caption" Color="Color.Warning" Class="mt-1">Undiscovered</MudText>
                        }
                    </MudCardContent>
                    @if (isUnlocked && currentLevel < skill.MaxLevel)
                    {
                        <MudCardActions Class="pa-1">
                            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small" FullWidth="true"
                                       OnClick="() => GameState.LevelUpTalent(skill.Id)"
                                       Disabled="!canLevelUp">
                                Level Up Talent
                            </MudButton>
                        </MudCardActions>
                    }
                </MudCard>
            </MudItem>
        }
        @if (!GameState.AllSkills.Any(s => GameState.CurrentGameData.UnlockedSkillIds.Contains(s.Id)))
        {
            <MudItem xs="12"><MudText>No talents discovered yet. Undertake quests and training to awaken them!</MudText></MudItem>
        }
    </MudGrid>
</MudPaper>
